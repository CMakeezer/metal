# Copyright Bruno Dutra 2015-2017
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt

sudo: required
language: cpp

git:
  depth: 1

env:
    global:
      - secure: "DuBGzmeKiWMm5m0+uZhutjzCffB2PbixmuMm3IZWUi7/uAam4PPI37oeqVTIytxxfpgRvfR2ah75eJyU6ab72MBoHxGkHem10RAvhC/vPYbLZu545qfSGatyTI9R6NfERUxi7YIxjs6D8c4D/5k3gMoCbMUkU1Lze1708lknh5U="

addons:
    apt:
        packages: &pkgs
        sources: &srcs
          - ubuntu-toolchain-r-test

cache:
  directories:
    - deps/boost

matrix:
    include:
      - os: linux
        dist: trusty
        env: DEPLOY=true
        addons:
            apt:
                packages:
                  - tree

      - os: linux
        dist: trusty
        env: CHECK_DOC=true

      - os: linux
        dist: trusty
        env: CHECK_FORMATTING=/usr/bin/clang-format-5.0
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-format-5.0
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=4.7
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-4.7
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=4.8
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-4.8
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=4.9
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-4.9
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=5
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-5
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=6
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-6
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: g++
        env: CXXVER=7
        addons:
            apt:
                packages:
                  - *pkgs
                  - g++-7
                sources: *srcs

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.4
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-3.4
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.4 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.5
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-3.5
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.5 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.6
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-3.6
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.6 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.7
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.7
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.7 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.8
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-3.8
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=3.9
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-3.9
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=4.0
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-4.0
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-4.0 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXXVER=5.0
        addons:
            apt:
                packages:
                  - *pkgs
                  - clang-5.0
                  - libc++-dev
                  - libc++abi-dev
                sources:
                  - *srcs
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-5.0 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: osx
        env: CHECK_DOC=true

      - os: osx
        osx_image: xcode6.4

      - os: osx
        osx_image: xcode7.3

      - os: osx
        osx_image: xcode8

      - os: osx
        osx_image: xcode8.1

      - os: osx
        osx_image: xcode8.2

before_install:
  - git config --global user.name "Travis Bot"
  - git config --global user.email "\<\>"

  - METAL_SOURCE_PATH="${TRAVIS_BUILD_DIR}"

  - METAL_BUILD_PATH="${TRAVIS_BUILD_DIR}/build"
  - mkdir -p "${METAL_BUILD_PATH}"

  - DEPS_PATH="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_PATH}"

  - GITHUB_PATH="${TRAVIS_BUILD_DIR}/github"
  - mkdir -p "${GITHUB_PATH}"

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "linux" ]]
    then
        CMAKE_URL="http://www.cmake.org/files/v3.8/cmake-3.8.0-Linux-x86_64.tar.gz"
        mkdir -p "${DEPS_PATH}/cmake"
        travis_retry curl -L "${CMAKE_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/cmake" || exit 1
        export PATH=${DEPS_PATH}/cmake/bin:${PATH}

        # download the latest doxygen available
        DOXYGEN_FTP="ftp://ftp.stack.nl/pub/users/dimitri/"
        DOXYGEN_PKG=$(travis_retry curl -Ls "${DOXYGEN_FTP}" | grep -Eo "doxygen-[0-9.]+linux[.]bin[.]tar[.]gz" | sort -V | tail -1)
        DOXYGEN_URL="${DOXYGEN_FTP}/${DOXYGEN_PKG}"
        mkdir -p "${DEPS_PATH}/doxygen"
        travis_retry curl -L "${DOXYGEN_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/doxygen" || exit 1
        export PATH="${DEPS_PATH}/doxygen/bin:${PATH}"
    else
        CMAKE_URL="http://www.cmake.org/files/v3.8/cmake-3.8.0-Darwin-x86_64.tar.gz"
        mkdir -p "${DEPS_PATH}/cmake"
        travis_retry curl -L "${CMAKE_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/cmake" || exit 1
        export PATH=${DEPS_PATH}/cmake/CMake.app/Contents/bin:${PATH}

        brew update
        brew unlink doxygen
        brew install doxygen
    fi

  - |
    if [[ -d "${DEPS_PATH}/boost/.git" ]]
    then
        (cd "${DEPS_PATH}/boost" && git submodule update --recursive) || exit
    else
        BOOST_URL="http://github.com/boostorg/boost.git"
        travis_retry git clone --depth 1 --recursive --quiet ${BOOST_URL} ${DEPS_PATH}/boost || exit 1
    fi

    (cd "${DEPS_PATH}/boost" && ./bootstrap.sh && ./b2 headers)

before_script:
  - CMAKE_ARGS=("${METAL_SOURCE_PATH}")

  - |
    if [[ -n "${CXX}" && -n "${CXXVER}" ]]
    then
        CMAKE_ARGS+=("-DCMAKE_CXX_COMPILER=${CXX}-${CXXVER}")
    fi

  - |
    if [[ -n "${CHECK_FORMATTING}" ]]
    then
        CMAKE_ARGS+=("-DCLANG_FORMAT=${CHECK_FORMATTING}")
    fi

    CMAKE_ARGS+=("-DCMAKE_CXX_FLAGS=-DMETAL_TEST_GEN_LIMIT=9")
    CMAKE_ARGS+=("-DBOOST_ROOT=${DEPS_PATH}/boost")

  - (cd "${METAL_BUILD_PATH}" && cmake ${CMAKE_ARGS[@]})

  - |
    function publish {
        git clone https://brunocodutra:${GITHUB_TOKEN}@github.com/brunocodutra/metal -q --depth 1 --branch=$2 "${GITHUB_PATH}/$2" &> /dev/null || return 1
        cp -r "${GITHUB_PATH}/$2/.git/" $1                                                                                        &> /dev/null || return 2
        git -C $1 add --all .                                                                                                     &> /dev/null || return 3
        git -C $1 commit --allow-empty -m "update to $(git -C ${METAL_SOURCE_PATH} rev-parse --short HEAD)"                       &> /dev/null || return 4
        git -C $1 push origin $2                                                                                                  &> /dev/null || return 5
    }

script:
  - |
    if [[ "${DEPLOY}" == "true" ]]
    then
        cmake --build "${METAL_BUILD_PATH}" --target deploy && tree "${METAL_BUILD_PATH}/dist/" || exit 1
        if [[ "${TRAVIS_BRANCH}" == "master" && "${TRAVIS_PULL_REQUEST}" == "false" ]]
        then
            publish "${METAL_BUILD_PATH}/dist/share/Metal/doc" gh-pages || exit $?
            publish "${METAL_BUILD_PATH}/dist/include/" standalone || exit $?
        fi
    elif [[ "${CHECK_DOC}" == "true" ]]
    then
        ! cmake --build "${METAL_BUILD_PATH}" --target doc 2>&1 | grep --color -iE "warning|error" || exit 1
    elif [[ -n "${CHECK_FORMATTING}" ]]
    then
        (cd "${METAL_BUILD_PATH}" && ctest --output-on-failure -R ^test.format)
    else
        (cd "${METAL_BUILD_PATH}" && ctest --output-on-failure -E ^test.format)
    fi

notifications:
  webhooks:
    urls: https://webhooks.gitter.im/e/f0433b6f1de0942ea9a8
    on_success: change
    on_failure: always
