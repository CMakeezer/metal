# Copyright Bruno Dutra 2015-2016
# Distributed under the Boost Software License, Version 1.0.
# See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt

sudo: required
language: cpp

git:
  depth: 1

env:
    global:
      - secure: "DuBGzmeKiWMm5m0+uZhutjzCffB2PbixmuMm3IZWUi7/uAam4PPI37oeqVTIytxxfpgRvfR2ah75eJyU6ab72MBoHxGkHem10RAvhC/vPYbLZu545qfSGatyTI9R6NfERUxi7YIxjs6D8c4D/5k3gMoCbMUkU1Lze1708lknh5U="

    matrix:
      - BOGUS_JOB

addons:
    apt:
        packages: &ubuntu_packages
        sources: &ubuntu_sources
          - ubuntu-toolchain-r-test

matrix:
    exclude:
      - env: BOGUS_JOB

    include:
      - os: linux
        dist: trusty
        env: BUILD_DOC=true

      - os: osx
        env: BUILD_DOC=true

      - os: linux
        dist: trusty
        compiler: g++
        env: CXX_VERSION=5
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-5
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: g++
        env: CXX_VERSION=6
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - g++-6
                sources: *ubuntu_sources

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.4 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.4
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.4 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.5 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.5
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.5 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.6 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.6
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.6 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.7 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.7
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.7 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.8 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.8
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.8 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=3.9 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-3.9
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty-3.9 main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: linux
        dist: trusty
        compiler: clang++
        env: CXX_VERSION=4.0 CXXFLAGS=-stdlib=libc++
        addons:
            apt:
                packages:
                  - *ubuntu_packages
                  - clang-4.0
                  - libc++-dev
                sources:
                  - *ubuntu_sources
                  - sourceline: 'deb http://apt.llvm.org/trusty/ llvm-toolchain-trusty main'
                    key_url: 'http://apt.llvm.org/llvm-snapshot.gpg.key'

      - os: osx
        osx_image: xcode6.4

      - os: osx
        osx_image: xcode7.3

      - os: osx
        osx_image: xcode8

      - os: osx
        osx_image: xcode8.1

      - os: osx
        osx_image: xcode8.2

before_install:
  - git config --global user.name "Travis Bot"
  - git config --global user.email "\<\>"

  - METAL_SOURCE_PATH="${TRAVIS_BUILD_DIR}"
  - EXTERNAL_SOURCE_PATH="${METAL_SOURCE_PATH}/example/external/"

  - METAL_BUILD_PATH="${TRAVIS_BUILD_DIR}/build"
  - mkdir -p "${METAL_BUILD_PATH}"

  - METAL_INSTALL_PATH="${TRAVIS_BUILD_DIR}/install"
  - mkdir -p "${METAL_INSTALL_PATH}"

  - EXTERNAL_BUILD_PATH="${METAL_BUILD_PATH}/example/external/"
  - mkdir -p "${EXTERNAL_BUILD_PATH}"

  - DEPS_PATH="${TRAVIS_BUILD_DIR}/deps"
  - mkdir -p "${DEPS_PATH}"

  - |
    if [[ -n "${TRAVIS_TAG}" ]]
    then
        METAL_VERSION="${TRAVIS_TAG}"
        METAL_VERSION_EXACT=true
    else
        METAL_VERSION=$( \
            curl -Ls https://github.com/brunocodutra/metal/tags | \
            awk '/tag-name/{print $3;exit}' FS='[<>]' \
        )
        METAL_VERSION_EXACT=false
    fi

  - METAL_VERSION="${METAL_VERSION%%-*}"
  - METAL_VERSION="${METAL_VERSION##*v}"
  - echo "METAL_VERSION=${METAL_VERSION}"

install:
  - |
    if [[ "${TRAVIS_OS_NAME}" == "osx" ]]
    then
        brew update
        brew unlink cmake doxygen
        brew install cmake doxygen
        true
    fi

  - |
    if [[ "${BUILD_DOC}" == "true" && "${TRAVIS_OS_NAME}" == "linux" ]]
    then
        # download the latest doxygen available
        DOXYGEN_FTP="ftp://ftp.stack.nl/pub/users/dimitri/"
        DOXYGEN_PKG=$(travis_retry curl -Ls "${DOXYGEN_FTP}" | grep -Eo "doxygen-[0-9.]+linux[.]bin[.]tar[.]gz" | sort -V | tail -1)
        DOXYGEN_URL="${DOXYGEN_FTP}/${DOXYGEN_PKG}"
        mkdir -p "${DEPS_PATH}/doxygen" &&
        travis_retry curl -L "${DOXYGEN_URL}" | tar --strip-components=1 -xz -C "${DEPS_PATH}/doxygen"
        export PATH="${DEPS_PATH}/doxygen/bin:${PATH}"
    fi

before_script:
  - CMAKE_ARGS=("-DCMAKE_INSTALL_PREFIX=${METAL_INSTALL_PATH}")

  - |
    if [[ -n "${CXX}" && -n "${CXX_VERSION}" ]]
    then
        CMAKE_ARGS+=("-DCMAKE_CXX_COMPILER=${CXX}-${CXX_VERSION}")
    fi

  - (cd "${METAL_BUILD_PATH}" && cmake "${METAL_SOURCE_PATH}" ${CMAKE_ARGS[@]} && make install)

  - CMAKE_ARGS+=("-DCMAKE_PREFIX_PATH=${METAL_INSTALL_PATH}")
  - CMAKE_ARGS+=("-DMETAL_VERSION=${METAL_VERSION}")
  - CMAKE_ARGS+=("-DMETAL_VERSION_EXACT=${METAL_VERSION_EXACT}")

  - |
    if [[ "${BUILD_DOC}" != "true" ]]
    then
      (cd "${EXTERNAL_BUILD_PATH}" && cmake "${EXTERNAL_SOURCE_PATH}" ${CMAKE_ARGS[@]})
    fi

script:
  - |
    if [[ "${BUILD_DOC}" == "true" ]]
    then
        (cd "${METAL_BUILD_PATH}" && make doc) &&
        if [[ "${TRAVIS_BRANCH}" == "master" && "${TRAVIS_PULL_REQUEST}" == "false" ]]
        then
            git clone https://brunocodutra:${GITHUB_TOKEN}@github.com/brunocodutra/metal -q --depth 1 --branch=gh-pages "${METAL_BUILD_PATH}/doc/gh-pages" &> /dev/null &&
            cp -r "${METAL_BUILD_PATH}/doc/gh-pages/.git/" "${METAL_BUILD_PATH}/doc/html/" &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" add --all . &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" commit --allow-empty -m "updating to $(git -C ${METAL_SOURCE_PATH} rev-parse --short HEAD)" &> /dev/null &&
            git -C "${METAL_BUILD_PATH}/doc/html/" push origin gh-pages &> /dev/null
        fi
    else
        (cd "${EXTERNAL_BUILD_PATH}" && make all) &&
        (cd "${METAL_BUILD_PATH}" && ctest --output-on-failure)
    fi
