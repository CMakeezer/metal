# Copyright Bruno Dutra 2015
# Distributed under the Boost Software License, Version 1.0.
# (See accompanying file LICENSE.txt or copy at http://boost.org/LICENSE_1_0.txt)

language: cpp
os: linux
sudo: required

env:
  global:
    secure: I+/0uZHtoQoyh/NzNru20y7YBqkazbXj/ciTRxoX5oq4YCZoFh07BJxghWeQNX/OqAVpKb0pNbkyMJxKe628LeHlI4ftZCZl2ZJmcLONR9KOUI+8eJ/sb5+TgQIaG1uBwUFx89eXKbbZWWdc0CQhBnSEJdU8sl6lY+ZsbU9PtKk=

matrix:
    include:
        - env: COMPILER=g++-4.7     PKGS=g++-4.7
        - env: COMPILER=g++-4.8     PKGS=g++-4.8
        - env: COMPILER=g++-4.9     PKGS=g++-4.9
        - env: COMPILER=g++-5       PKGS=g++-5
        - env: COMPILER=clang++-3.1 PKGS="clang-3.1 libc++-dev"
        - env: COMPILER=clang++-3.2 PKGS="clang-3.2 libc++-dev"
        - env: COMPILER=clang++-3.3 PKGS="clang-3.3 libc++-dev"
        - env: COMPILER=clang++-3.4 PKGS="clang-3.4 libc++-dev"
        - env: COMPILER=clang++-3.5 PKGS="clang-3.5 libc++-dev"
        - env: COMPILER=clang++-3.6 PKGS="clang-3.6 libc++-dev"
        - env: COMPILER=clang++-3.7 PKGS="clang-3.7 libc++-dev"
        - env: COMPILER=cpp         PKGS="doxygen"              BUILD_DOC=true

before_install:
    - sudo add-apt-repository --yes ppa:ubuntu-toolchain-r/test
    - sudo add-apt-repository --yes ppa:h-rayflood/llvm
    - sudo add-apt-repository --yes 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.5 main'
    - sudo add-apt-repository --yes 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise-3.6 main'
    - sudo add-apt-repository --yes 'deb http://llvm.org/apt/precise/ llvm-toolchain-precise main'
    - wget -O - http://llvm.org/apt/llvm-snapshot.gpg.key | sudo apt-key add -
    - sudo apt-get -qq update

install:
    - if [ -n "${PKGS}" ]; then sudo apt-get -qq install ${PKGS}; fi

before_script:
    - git config --global user.name "Travis Bot"

    - mkdir "${TRAVIS_BUILD_DIR}/build"
    - cd "${TRAVIS_BUILD_DIR}/build"

    - if [ -z "${BUILD_DOC}" ]; then BUILD_DOC=false; fi
    - cmake "${TRAVIS_BUILD_DIR}" -DCMAKE_CXX_COMPILER=/usr/bin/${COMPILER} -DMETAL_BUILD_DOC=${BUILD_DOC}

script:
    - time make metal.test && ctest --output-on-failure
    - if [[ "${BUILD_DOC}" == "true" && "${TRAVIS_PULL_REQUEST}" == "false" && "${TRAVIS_BRANCH}" == "master" ]]; then make metal.doc.update &> /dev/null; else time make metal.doc; fi
