/*
 * This file is part of mpl2, a free software.
 * Use, modification and distribution is subject to the BSD 2-clause license.
 * See accompanying file LICENSE for its full text.
 */

#ifndef _BOOST_MPL2_COMPAT_VARIADIC_HPP_
#define _BOOST_MPL2_COMPAT_VARIADIC_HPP_

#include <boost/mpl2/config/switches/variadic_templates.hpp>

#if defined(BOOST_MPL2_CFG_NO_VARIADIC_TEMPLATES)
    #include <boost/mpl2/compat/numbered.hpp>

    #define __BOOST_MPL2_FOR_EACH_VARIADIC_NAME(N, PREFIX, MACRO, DATA) \
        __BOOST_MPL2_FOR_EACH_NAME(N, PREFIX, MACRO, DATA)

    #define __BOOST_MPL2_APPLY_TO_VARIADIC_ARG(TMPL, ARG) \
        __BOOST_MPL2_APPLY_TO_ARG(TMPL, ARG)

    #define __BOOST_MPL2_WRAP_VARIADIC_ARG(TMPL, ARG) \
        __BOOST_MPL2_WRAP_ARG(TMPL, ARG)

    #define BOOST_MPL2_VARIADIC_ARGS(N, PREFIX) \
        BOOST_MPL2_ARGS(N, PREFIX)

    #define __BOOST_MPL2_WRAP_VARIADIC_PARAM(TMPL, ARG) \
        __BOOST_MPL2_WRAP_PARAM(TMPL, ARG)

    #define BOOST_MPL2_VARIADIC_PARAMS(N, PREFIX) \
        BOOST_MPL2_PARAMS(N, PREFIX)

    #define BOOST_MPL2_VARIADIC_OPTIONAL_PARAMS(N, PREFIX) \
        BOOST_MPL2_OPTIONAL_PARAMS(N, PREFIX)
#else
    #include <boost/preprocessor/if.hpp>
    #include <boost/preprocessor/expr_if.hpp>
    #include <boost/preprocessor/expand.hpp>
    #include <boost/preprocessor/identity.hpp>
    #include <boost/preprocessor/tuple/eat.hpp>

    #define __BOOST_MPL2_FOR_EACH_VARIADIC_NAME(N, PREFIX, MACRO, DATA) \
        BOOST_PP_IF(N, BOOST_PP_EXPAND, BOOST_PP_TUPLE_EAT(1)) \
            (MACRO BOOST_PP_IDENTITY((DATA, PREFIX))()...)

    #define __BOOST_MPL2_APPLY_TO_VARIADIC_ARG(TMPL, ARG) \
        typename TMPL<ARG>::type

    #define __BOOST_MPL2_WRAP_VARIADIC_ARG(TMPL, ARG) \
        TMPL<ARG>

    #define BOOST_MPL2_VARIADIC_ARGS(N, PREFIX) \
        BOOST_PP_EXPR_IF(N, PREFIX...)

    #define __BOOST_MPL2_WRAP_VARIADIC_PARAM(TMPL, ARG) \
        TMPL<ARG>

    #define BOOST_MPL2_VARIADIC_PARAMS(N, PREFIX) \
        BOOST_PP_EXPR_IF(N, typename... PREFIX)

    #define BOOST_MPL2_VARIADIC_OPTIONAL_PARAMS(N, PREFIX) \
        BOOST_MPL2_VARIADIC_PARAMS(N, PREFIX)
#endif

// APPLY TO EACH VARIADIC ARG
#define BOOST_MPL2_APPLY_TO_EACH_VARIADIC_ARG(N, PREFIX, TMPL) \
    __BOOST_MPL2_FOR_EACH_VARIADIC_NAME(N, PREFIX, __BOOST_MPL2_APPLY_TO_VARIADIC_ARG, TMPL)

#define BOOST_MPL2_APPLY_TO_EACH_LEADING_VARIADIC_ARG(N, PREFIX, TMPL) \
    BOOST_MPL2_APPLY_TO_EACH_VARIADIC_ARG(N, PREFIX, TMPL) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_APPLY_TO_EACH_TRAILING_VARIADIC_ARG(N, PREFIX, TMPL) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_APPLY_TO_EACH_VARIADIC_ARG(N, PREFIX, TMPL)

// WRAP EACH VARIADIC ARG
#define BOOST_MPL2_WRAP_EACH_VARIADIC_ARG(N, PREFIX, TMPL) \
    __BOOST_MPL2_FOR_EACH_VARIADIC_NAME(N, PREFIX, __BOOST_MPL2_WRAP_VARIADIC_ARG, TMPL)

#define BOOST_MPL2_WRAP_EACH_LEADING_VARIADIC_ARG(N, PREFIX, TMPL) \
    BOOST_MPL2_WRAP_EACH_VARIADIC_ARG(N, PREFIX, TMPL) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_WRAP_EACH_TRAILING_VARIADIC_ARG(N, PREFIX, TMPL) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_WRAP_EACH_VARIADIC_ARG(N, PREFIX, TMPL)

// VARIADIC ARGS
#define BOOST_MPL2_LEADING_VARIADIC_ARGS(N, PREFIX) \
    BOOST_MPL2_VARIADIC_ARGS(N, PREFIX) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_TRAILING_VARIADIC_ARGS(N, PREFIX) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_VARIADIC_ARGS(N, PREFIX)

// WRAP EACH VARIADIC PARAM
#define BOOST_MPL2_WRAP_EACH_VARIADIC_PARAM(N, PREFIX, TMPL) \
    __BOOST_MPL2_FOR_EACH_VARIADIC_NAME(N, PREFIX, __BOOST_MPL2_WRAP_VARIADIC_PARAM, TMPL)

#define BOOST_MPL2_WRAP_EACH_LEADING_VARIADIC_PARAM(N, PREFIX, TMPL) \
    BOOST_MPL2_WRAP_EACH_VARIADIC_PARAM(N, PREFIX, TMPL) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_WRAP_EACH_TRAILING_VARIADIC_PARAM(N, PREFIX, TMPL) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_WRAP_EACH_VARIADIC_PARAM(N, PREFIX, TMPL)

// VARIADIC PARAMS
#define BOOST_MPL2_LEADING_VARIADIC_PARAMS(N, PREFIX) \
    BOOST_MPL2_VARIADIC_PARAMS(N, PREFIX) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_TRAILING_VARIADIC_PARAMS(N, PREFIX) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_VARIADIC_PARAMS(N, PREFIX)

// VARIADIC OPTIONAL PARAMS
#define BOOST_MPL2_LEADING_VARIADIC_OPTIONAL_PARAMS(N, PREFIX) \
    BOOST_MPL2_VARIADIC_OPTIONAL_PARAMS(N, PREFIX) BOOST_PP_COMMA_IF(N)

#define BOOST_MPL2_TRAILING_VARIADIC_OPTIONAL_PARAMS(N, PREFIX) \
    BOOST_PP_COMMA_IF(N) BOOST_MPL2_VARIADIC_OPTIONAL_PARAMS(N, PREFIX)

#endif
